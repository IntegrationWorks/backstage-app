name: deploy
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment to deploy to
        options:
          - dev
          - prod
        default: development

jobs:
  deploy:
    name: "Deploy ${{ github.event.inputs.environment }}"
    env:
      REPO_NAME: ${{ github.event.repository.name }}
      ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
      ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
      ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}

      TF_VAR_psql_username: ${{secrets.POSTGRES_USER}}
      TF_VAR_psql_password: ${{secrets.POSTGRES_PASSWORD}}

    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            terraform

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: '{"clientId": "${{ env.ARM_CLIENT_ID}}", "clientSecret":"${{env.ARM_CLIENT_SECRET}}", "tenantId": "${{ env.ARM_TENANT_ID}}","subscriptionId": "${{ env.ARM_SUBSCRIPTION_ID}}"}'

      - name: Get Backend Storage Key
        run: export ARM_ACCESS_KEY=$(az storage account keys list --resource-group backstage-terraform --account-name iwterraformstate --query '[0].value' -o tsv)

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ./push-based/notification
        run: |
          terraform init -backend-config="key=${{ env.REPO_NAME }}-${{ env.ENVIRONMENT }}.tfstate"

      - name: Terraform Validate
        working-directory: ./terraform
        run: |
          terraform validate

      - name: Terraform Plan
        if: github.event.inputs.destroy == 'false'
        working-directory: ./push-based/notification
        id: plan
        run: |
          terraform plan  -var-file="./tfvars/${{ github.event.inputs.environment }}-vars.tfvars" -out main.tfplan

      - name: Apply
        if: github.event.inputs.destroy == 'false'
        working-directory: ./push-based/notification
        run: |
          terraform apply "main.tfplan"

      - name: Terraform Destroy
        if: github.event.inputs.destroy == 'true' || env.IS_SCHEDULED == 'true'
        working-directory: ./push-based/notification
        run: |
          terraform destroy -auto-approve -var-file="./tfvars/${{ env.ENVIRONMENT }}-vars.tfvars"

name: build
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment to deploy
        options:
          - development
          - production
        default: development

jobs:
  build:
    name: "Build ${{ github.event.inputs.environment }}"
    env:
      REPO_NAME: ${{ github.event.repository.name }}
      ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
      ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
      ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
      POSTGRES_HOST: ${{secrets.POSTGRES_HOST}}
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${{secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}

    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Make replace_env_vars.sh executable
        run: chmod +x ./backstage/replace_env_vars.sh

      - name: List files in the current directory
        run: ls -la ./backstage

      - name: Print initial content of app-config.production.yaml
        run: cat ./backstage/app-config.production.yaml

      - name: Replace environment variables in app-config.production.yaml
        working-directory: ./backstage
        run: |
          bash replace_env_vars.sh app-config.production.yaml POSTGRES_HOST=${{ env.POSTGRES_HOST }} POSTGRES_USER=${{ env.POSTGRES_USER }} POSTGRES_PORT=${{ env.POSTGRES_PORT }} POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }}

      - name: Print updated content of app-config.production.yaml
        run: cat ./backstage/app-config.production.yaml

      - name: Install yarn
        run: |
          curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/yarn.gpg
          echo "deb [signed-by=/etc/apt/trusted.gpg.d/yarn.gpg] https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
          sudo apt update
          sudo apt install yarn

      - name: Install yarn dependencies
        working-directory: ./backstage
        run: |
          yarn install --frozen-lockfile
          yarn tsc

      - name: Build Application
        working-directory: ./backstage
        run: |
          # Build backend

          yarn build:backend --config ../../app-config.yaml --config ../../app-config.production.yaml

      - name: Docker Login
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.AZURE_REPO_URL }}
          username: ${{ env.ARM_CLIENT_ID }}
          password: ${{ env.ARM_CLIENT_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Backstage image
        uses: docker/build-push-action@v6
        with:
          context: ./backstage
          push: true
          tags: ${{ secrets.AZURE_REPO_URL }}/iw-accelerator:latest
          file: backstage/packages/backend/Dockerfile

      - name: Build and push Nginx image
        uses: docker/build-push-action@v6
        with:
          context: ./nginx
          push: true
          tags: ${{ secrets.AZURE_REPO_URL }}/nginx:latest
          file: nginx/Dockerfile

app:
  title: Developer Portal
  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
  # baseUrl: ${base-url}
organization:
  name: Fusion5

backend:
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  # The listener can also be expressed as a single <host>:<port> string. In this case we bind to
  # all interfaces, the most permissive setting. The right value depends on your specific deployment.
  # baseUrl: ${base-url}
  listen:
    port: 7007

  csp:
    connect-src: ["'self'", "http:", "https:"]
  cors:
    origin: ${base-url}
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true

  # config options: https://node-postgres.com/apis/client
  database:
    client: pg
    connection:
      host: ${postgres-host}
      port: ${postgres-port}
      user: ${postgres-user}
      password: ${postgres-password}
      # https://node-postgres.com/features/ssl
      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      # ssl:
      #   ca: # if you have a CA file and want to verify it you can uncomment this section
      #     $file: <file-path>/ca/server.crt

techdocs:
  builder: "local" # Alternatives - 'external'
  generator:
    runIn: "local" # Alternatives - 'local'
  publisher:
    type: "local" # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

catalog:
  processingInterval: { minutes: 5 }
  rules:
    - allow: [Component, System, API, Resource, Location, Template]
  locations:
    - type: url
      target: https://github.com/IntegrationWorks/backstage-templates/blob/main**/template.yaml
  providers:
    githubOrg:
      - id: production
        githubUrl: "https://github.com"
        organization: "IntegrationWorks"
        schedule:
          frequency: PT45M
          timeout: PT3M
    github:
      providerId:
        organization: "IntegrationWorks"
        catalogPath: "**/catalog-info.yaml" # string
        filters:
          # branch: "main" # string
        #   repository: "backstage-templates" # Regex
        schedule: # same options as in SchedulerServiceTaskScheduleDefinition
          # supports cron, ISO duration, "human duration" as used in code
          frequency: { minutes: 30 }
          # supports ISO duration, "human duration" as used in code
          timeout: { minutes: 3 }
      templateProvider:
        organization: "IntegrationWorks"
        catalogPath: "**/template.yaml"
        # filters:
        #   repository: "backstage-templates"
        schedule: # same options as in SchedulerServiceTaskScheduleDefinition
          # supports cron, ISO duration, "human duration" as used in code
          frequency: { minutes: 30 }
          # supports ISO duration, "human duration" as used in code
          timeout: { minutes: 3 }

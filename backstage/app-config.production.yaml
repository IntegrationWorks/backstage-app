app:
  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
  baseUrl: ${BASE_URL}

backend:
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  # The listener can also be expressed as a single <host>:<port> string. In this case we bind to
  # all interfaces, the most permissive setting. The right value depends on your specific deployment.
  listen:
    port: 7007
  baseUrl: ${BASE_URL}
  csp:
    connect-src: ["'self'", "http:", "https:"]
  cors:
    origin: ${BASE_URL}
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true

  # config options: https://node-postgres.com/apis/client
  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
      # https://node-postgres.com/features/ssl
      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      # ssl:
      #   ca: # if you have a CA file and want to verify it you can uncomment this section
      #     $file: <file-path>/ca/server.crt

# auth:
#   environment: production
#   providers:
#     # See https://backstage.io/docs/auth/guest/provider
#     github:
#       production:
#         clientId:
#         clientSecret: TODO
#         signIn:
#           resolvers:
#             # Matches the GitHub username with the Backstage user entity name.
#             # See https://backstage.io/docs/auth/github/provider#resolvers for more resolvers.
#             - resolver: usernameMatchingUserEntityName

catalog:
  orphanStrategy: delete
  processingInterval: { minutes: 45 }
  rules:
    - allow: [Component, System, API, Resource, Location, Template]
  locations: []
  providers:
    githubOrg:
      - id: production
        githubUrl: "https://github.com"
        organization: "IntegrationWorks"
        schedule:
          frequency: PT45M
          timeout: PT3M
    github:
      providerId:
        organization: "IntegrationWorks"
        catalogPath: "/catalog-info.yaml" # string
        filters:
          branch: "main" # string
          repository: "backstage-templates" # Regex
        schedule: # same options as in SchedulerServiceTaskScheduleDefinition
          # supports cron, ISO duration, "human duration" as used in code
          frequency: { minutes: 30 }
          # supports ISO duration, "human duration" as used in code
          timeout: { minutes: 3 }
auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  experimentalExtraAllowedOrigins:
    [
      "${BASE_URL}",
      "${BASE_URL}:443",
      "${BASE_URL}:8443",
      "http://localhost:7007",
    ]
  environment: production
  providers:
    # See https://backstage.io/docs/auth/guest/provider
    github:
      production:
        clientId:
          $include: github-credentials.yaml#clientId
        clientSecret:
          $include: github-credentials.yaml#clientSecret
        signIn:
          resolvers:
            # Matches the GitHub username with the Backstage user entity name.
            # See https://backstage.io/docs/auth/github/provider#resolvers for more resolvers.
            - resolver: usernameMatchingUserEntityName

integrations:
  github:
    - host: github.com
      apps:
        - $include: github-credentials.yaml
